#include "Driver_USART.h"               // ::CMSIS Driver:USART
#include "Board_GLCD.h"                 // ::Board Support:Graphic LCD
#include "GLCD_Config.h"                // Keil.MCB1700::Board Support:Graphic LCD
#include "stdio.h"

extern ARM_DRIVER_USART Driver_USART1;
extern GLCD_FONT GLCD_Font_6x8;
extern GLCD_FONT GLCD_Font_16x24;
void Init_UART(void);

void Init_UART(void){
	Driver_USART1.Initialize(NULL);
	Driver_USART1.PowerControl(ARM_POWER_FULL);
	Driver_USART1.Control(	ARM_USART_MODE_ASYNCHRONOUS |
							ARM_USART_DATA_BITS_8		|
							ARM_USART_STOP_BITS_1		|
							ARM_USART_PARITY_NONE		|
							ARM_USART_FLOW_CONTROL_NONE,
							9600);
	Driver_USART1.Control(ARM_USART_CONTROL_TX,1);
	Driver_USART1.Control(ARM_USART_CONTROL_RX,1);
}


int main (void){
	
	char buffer[50];
	char badge1[50]={0x02,0x33,0x34,0x30,0x30,0x43,0x37,0x39,044,0x43,0x43,0x41,0x32,0x03}; // StartByte + (data + checksum)+ EndByte

	Init_UART();
	GLCD_Initialize();
	GLCD_ClearScreen();
	GLCD_SetFont(&GLCD_Font_16x24);
	
	/* Pour trouver le caractère ASCII de début et celui de fin
	sprintf(buff, "%02x %02x",tab2[0],tab2[13]);
	GLCD_DrawString(1,1,buf);	
	*/
	
	while(1){
  	Driver_USART1.Receive(buffer,14);
	while(Driver_USART1.GetRxCount()<14); 
	

	GLCD_DrawString(1,1,buffer);	
	
  	if(badge1[14]==buffer[14])
		{
		
		GLCD_DrawString(1,100,buffer);	
		}
	}
	return 0;
}
